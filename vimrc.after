"nerdtree
let g:NERDTreeHijackNetrw=1
let g:nerdtree_tabs_autoclose=0
map <Leader>rt :!ctags --exclude=log --exclude=doc --exclude=nbproject --exclude=.\* --extra=+f -R *  <CR><CR>
colorscheme Tomorrow-Night

" easymotion mapping
let g:EasyMotion_leader_key = '<Leader>]'

" ruby embedded document highlight
function! TextEnableCodeSnip(filetype,start,end,textSnipHl) abort
  let ft=toupper(a:filetype)
  let group='textGroup'.ft
  if exists('b:current_syntax')
    let s:current_syntax=b:current_syntax
    " Remove current syntax definition, as some syntax files (e.g. cpp.vim)
    " do nothing if b:current_syntax is defined.
    unlet b:current_syntax
  endif
  execute 'syntax include @'.group.' syntax/'.a:filetype.'.vim'
  try
    execute 'syntax include @'.group.' after/syntax/'.a:filetype.'.vim'
  catch
  endtry
  if exists('s:current_syntax')
    let b:current_syntax=s:current_syntax
  else
    unlet b:current_syntax
  endif
  execute 'syntax region textSnip'.ft.'
  \ matchgroup='.a:textSnipHl.'
  \ start="'.a:start.'" end="'.a:end.'"
  \ contains=@'.group
endfunction
"mysql embedded document highlight

autocmd FileType,Syntax ruby :call TextEnableCodeSnip('mysql', "<<-SQL", "SQL", 'Comment')
autocmd FileType,Syntax ruby :call TextEnableCodeSnip('javascript', "<<-JS", "JS", 'Comment')
autocmd BufNewFile,BufRead Procfile,Procfile.dev setf yaml



au FileType javascript set dictionary+=$HOME/.janus/vim-node-dict/dict/node.dict

let b:thisdir=expand("%:p:h")
let b:vim=b:thisdir.'/.vimrc'
if (filereadable(b:vim))
  let b:vim=substitute(b:vim,' ','\\ ','g')
  execute "source ".b:vim
endif

let g:syntastic_html_tidy_ignore_errors = [
    \"trimming empty <i>",
    \"trimming empty <span>",
    \"<input> proprietary attribute \"autocomplete\"",
    \"proprietary attribute \"role\"",
    \"proprietary attribute \"hidden\"",
    \" proprietary attribute \"ng-"
\]

"autocmd VimEnter * NERDTree
"autocmd BufEnter * NERDTreeMirror

autocmd Filetype html setlocal ts=2 sts=2 sw=2
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2
autocmd Filetype javascript setlocal ts=2 sts=2 sw=2

let javascript_enable_domhtmlcss=1

" CoffeeScript Tagbar
let g:tagbar_type_coffee = {
    \ 'ctagstype' : 'coffee',
    \ 'kinds'     : [
        \ 'm:methods',
        \ 'f:functions',
    \ ]
\ }

" CoffeeScript CtrlPBufTag
"let g:ctrlp_buftag_types = {'coffee'     : '--language-force=coffee --coffee-types=mf' }
let g:ctrlp_buftag_types = {'coffee'     : '--language-force=coffee' ,'javascript'  : '--language-force=neojs'  }
"let g:ctrlp_buftag_types = {
      "\ 'javascript' : '--language-force=js',
      "\ 'coffee'     : '--language-force=coffee',
      "\ }


"let $CTAGS = substitute(s:ctags_opts, '\v\\([nst]\\)', '\\\\\1', 'g')

GitGutterDisable
